# Generated by Django 5.1.7 on 2025-04-18 18:30

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('biodiversity', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='UUID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('attribute', models.CharField(choices=[('TH', 'trunk height'), ('HT', 'total height'), ('CD', 'crown diameter'), ('DBH', 'diameter at breast height'), ('VO', 'volume'), ('WD', 'wood density'), ('NR', 'not reported')], default='NR', max_length=3, verbose_name='measured attribute')),
                ('value', models.FloatField(verbose_name='measurement value')),
                ('unit', models.CharField(choices=[('m', 'meters'), ('m3', 'cubic meters'), ('cm', 'centimeters'), ('g/cm3', 'grams per cubic centimeter'), ('NR', 'not reported')], default='NR', max_length=5, verbose_name='measurement unit')),
                ('method', models.CharField(choices=[('OE', 'optical estimation'), ('VE', 'volume equation'), ('DT', 'diameter tape'), ('WD', 'wood density database'), ('NR', 'not reported')], default='NR', max_length=2, verbose_name='measurement method')),
                ('date', models.DateField(blank=True, null=True, verbose_name='measurement date')),
                ('biodiversity_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='measurements', to='biodiversity.biodiversityrecord', verbose_name='biodiversity record')),
            ],
            options={
                'verbose_name': 'measurement',
                'verbose_name_plural': 'measurements',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='UUID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('reproductive_condition', models.CharField(choices=[('FL', 'flowering'), ('FR', 'fruiting'), ('ST', 'sterile'), ('NR', 'not reported')], default='NR', max_length=2, verbose_name='reproductive condition')),
                ('phytosanitary_status', models.CharField(choices=[('HE', 'healthy'), ('SI', 'sick'), ('CR', 'critical'), ('DE', 'dead'), ('NR', 'not reported')], default='NR', max_length=2, verbose_name='phytosanitary status')),
                ('physical_condition', models.CharField(choices=[('GO', 'good'), ('FA', 'fair'), ('PO', 'poor'), ('NR', 'not reported')], default='NR', max_length=2, verbose_name='physical condition')),
                ('foliage_density', models.CharField(choices=[('DE', 'dense'), ('ME', 'medium'), ('SP', 'sparse'), ('NR', 'not reported')], default='NR', max_length=2, verbose_name='foliage density')),
                ('aesthetic_value', models.CharField(choices=[('ES', 'essential'), ('EM', 'emblematic'), ('DE', 'desirable'), ('IN', 'indifferent'), ('UN', 'unacceptable'), ('NR', 'not reported')], default='NR', max_length=2, verbose_name='aesthetic value')),
                ('growth_phase', models.IntegerField(choices=[(1, 'seedling'), (2, 'juvenile'), (3, 'adult')], default=1, verbose_name='growth phase')),
                ('ed', models.CharField(choices=[('GO', 'good'), ('FA', 'fair'), ('PO', 'poor'), ('NR', 'not reported')], default='NR', max_length=2)),
                ('hc', models.CharField(choices=[('NS', 'natural state'), ('ND', 'nutrient deficiency'), ('NR', 'not reported')], default='NR', max_length=2)),
                ('hfc', models.CharField(choices=[('NS', 'natural state'), ('ND', 'nutrient deficiency'), ('NR', 'not reported')], default='NR', max_length=2)),
                ('is_standing', models.BooleanField(default=True, help_text='Is the tree standing?', verbose_name='is standing')),
                ('cre', models.CharField(choices=[('Y', 'yes'), ('N', 'no'), ('NR', 'not reported')], default='NR', max_length=2)),
                ('crh', models.CharField(choices=[('Y', 'yes'), ('N', 'no'), ('NR', 'not reported')], default='NR', max_length=2)),
                ('cra', models.CharField(choices=[('Y', 'yes'), ('N', 'no'), ('NR', 'not reported')], default='NR', max_length=2)),
                ('coa', models.CharField(choices=[('Y', 'yes'), ('N', 'no'), ('NR', 'not reported')], default='NR', max_length=2)),
                ('ce', models.CharField(choices=[('Y', 'yes'), ('N', 'no'), ('NR', 'not reported')], default='NR', max_length=2)),
                ('civ', models.CharField(choices=[('Y', 'yes'), ('N', 'no'), ('NR', 'not reported')], default='NR', max_length=2)),
                ('crt', models.CharField(choices=[('Y', 'yes'), ('N', 'no'), ('NR', 'not reported')], default='NR', max_length=2)),
                ('crg', models.CharField(choices=[('Y', 'yes'), ('N', 'no'), ('NR', 'not reported')], default='NR', max_length=2)),
                ('cap', models.CharField(choices=[('Y', 'yes'), ('N', 'no'), ('NR', 'not reported')], default='NR', max_length=2)),
                ('rd', models.CharField(choices=[('0', '0%'), ('20', '20%'), ('40', '40%'), ('60', '60%'), ('80', '80%'), ('100', '100%'), ('NR', 'not reported')], default='0', max_length=3)),
                ('dm', models.CharField(choices=[('0', '0%'), ('20', '20%'), ('40', '40%'), ('60', '60%'), ('80', '80%'), ('100', '100%'), ('NR', 'not reported')], default='0', max_length=3)),
                ('bbs', models.CharField(choices=[('0', '0%'), ('20', '20%'), ('40', '40%'), ('60', '60%'), ('80', '80%'), ('100', '100%'), ('NR', 'not reported')], default='0', max_length=3)),
                ('ab', models.CharField(choices=[('0', '0%'), ('20', '20%'), ('40', '40%'), ('60', '60%'), ('80', '80%'), ('100', '100%'), ('NR', 'not reported')], default='0', max_length=3)),
                ('pi', models.CharField(choices=[('0', '0%'), ('20', '20%'), ('40', '40%'), ('60', '60%'), ('80', '80%'), ('100', '100%'), ('NR', 'not reported')], default='0', max_length=3)),
                ('ph', models.CharField(choices=[('0', '0%'), ('20', '20%'), ('40', '40%'), ('60', '60%'), ('80', '80%'), ('100', '100%'), ('NR', 'not reported')], default='0', max_length=3)),
                ('pa', models.CharField(choices=[('0', '0%'), ('20', '20%'), ('40', '40%'), ('60', '60%'), ('80', '80%'), ('100', '100%'), ('NR', 'not reported')], default='0', max_length=3)),
                ('pd', models.CharField(choices=[('0', '0%'), ('20', '20%'), ('40', '40%'), ('60', '60%'), ('80', '80%'), ('100', '100%'), ('NR', 'not reported')], default='0', max_length=3)),
                ('pe', models.CharField(choices=[('0', '0%'), ('20', '20%'), ('40', '40%'), ('60', '60%'), ('80', '80%'), ('100', '100%'), ('NR', 'not reported')], default='0', max_length=3)),
                ('pp', models.CharField(choices=[('0', '0%'), ('20', '20%'), ('40', '40%'), ('60', '60%'), ('80', '80%'), ('100', '100%'), ('NR', 'not reported')], default='0', max_length=3)),
                ('po', models.CharField(choices=[('0', '0%'), ('20', '20%'), ('40', '40%'), ('60', '60%'), ('80', '80%'), ('100', '100%'), ('NR', 'not reported')], default='0', max_length=3)),
                ('r_vol', models.CharField(choices=[('0', '0%'), ('20', '20%'), ('40', '40%'), ('60', '60%'), ('80', '80%'), ('100', '100%'), ('NR', 'not reported')], default='0', max_length=3)),
                ('r_cr', models.CharField(choices=[('0', '0%'), ('20', '20%'), ('40', '40%'), ('60', '60%'), ('80', '80%'), ('100', '100%'), ('NR', 'not reported')], default='0', max_length=3)),
                ('r_ce', models.CharField(choices=[('0', '0%'), ('20', '20%'), ('40', '40%'), ('60', '60%'), ('80', '80%'), ('100', '100%'), ('NR', 'not reported')], default='0', max_length=3)),
                ('field_notes', models.TextField(blank=True, verbose_name='field notes')),
                ('recorded_by', models.CharField(default='Cortolima', max_length=50, verbose_name='recorded by')),
                ('accompanying_collectors', models.TextField(blank=True, verbose_name='accompanying collectors')),
                ('date', models.DateField(blank=True, null=True, verbose_name='observation date')),
                ('biodiversity_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observations', to='biodiversity.biodiversityrecord', verbose_name='biodiversity record')),
            ],
            options={
                'verbose_name': 'observation',
                'verbose_name_plural': 'observations',
                'ordering': ['-created_at'],
            },
        ),
    ]
