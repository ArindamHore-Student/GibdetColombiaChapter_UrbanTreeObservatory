# Generated by Django 5.1.7 on 2025-04-11 03:41

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("biodiversity", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Measurement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, verbose_name="uuid"
                    ),
                ),
                (
                    "attribute",
                    models.CharField(
                        choices=[
                            ("TH", "trunk height"),
                            ("HT", "total height"),
                            ("CD", "canopy diameter"),
                            ("DBH", "diameter at breast height"),
                            ("VO", "volume"),
                            ("WD", "wood density"),
                            ("OT", "other"),
                            ("NO", "not reported"),
                        ],
                        max_length=3,
                        verbose_name="measured attribute",
                    ),
                ),
                (
                    "other_attribute",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        verbose_name="other attribute specification",
                    ),
                ),
                ("value", models.FloatField(verbose_name="measurement value")),
                (
                    "unit",
                    models.CharField(
                        choices=[
                            ("m", "meters"),
                            ("m3", "cubic meters"),
                            ("cm", "centimeters"),
                            ("mm", "millimeters"),
                            ("g/cm3", "grams per cubic centimeter"),
                            ("OT", "other"),
                            ("NO", "not reported"),
                        ],
                        max_length=5,
                        verbose_name="measurement unit",
                    ),
                ),
                (
                    "other_unit",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        verbose_name="other unit specification",
                    ),
                ),
                (
                    "method",
                    models.CharField(
                        choices=[
                            ("DI", "direct"),
                            ("IN", "indirect"),
                            ("OE", "optical estimation"),
                            ("DT", "diameter tape"),
                            ("VE", "volume equation"),
                            ("WD", "wood density database"),
                            ("OT", "other"),
                            ("NO", "not reported"),
                        ],
                        max_length=2,
                        verbose_name="measurement method",
                    ),
                ),
                (
                    "other_method",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        verbose_name="other method specification",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="notes")),
                (
                    "date",
                    models.DateField(
                        blank=True, null=True, verbose_name="measurement date"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "biodiversity_record",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="measurements",
                        to="biodiversity.biodiversityrecord",
                        verbose_name="biodiversity record",
                    ),
                ),
            ],
            options={
                "verbose_name": "measurement",
                "verbose_name_plural": "measurements",
                "ordering": ["biodiversity_record", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="Observation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, verbose_name="uuid"
                    ),
                ),
                (
                    "accompanying_collectors",
                    models.TextField(
                        blank=True,
                        default="No reportado",
                        verbose_name="accompanying collectors",
                    ),
                ),
                (
                    "use",
                    models.URLField(
                        blank=True,
                        help_text="reference URL for use",
                        verbose_name="use",
                    ),
                ),
                (
                    "is_standing",
                    models.BooleanField(
                        default=True,
                        help_text="whether the tree is alive and standing",
                        verbose_name="is standing",
                    ),
                ),
                (
                    "reproductive_condition",
                    models.CharField(
                        choices=[
                            ("FL", "flowering"),
                            ("FR", "fruiting"),
                            ("ST", "sterile"),
                            ("NO", "not reported"),
                        ],
                        default="NO",
                        max_length=2,
                        verbose_name="reproductive condition",
                    ),
                ),
                (
                    "phytosanitary_status",
                    models.CharField(
                        choices=[
                            ("HE", "healthy"),
                            ("SI", "sick"),
                            ("DE", "dead"),
                            ("NO", "not reported"),
                        ],
                        default="NO",
                        max_length=2,
                        verbose_name="phytosanitary status",
                    ),
                ),
                (
                    "physical_condition",
                    models.CharField(
                        choices=[
                            ("GO", "good"),
                            ("FA", "fair"),
                            ("PO", "poor"),
                            ("NO", "not reported"),
                        ],
                        default="NO",
                        max_length=2,
                        verbose_name="physical condition",
                    ),
                ),
                (
                    "foliage_density",
                    models.CharField(
                        choices=[
                            ("DE", "dense"),
                            ("ME", "medium"),
                            ("SP", "sparse"),
                            ("NO", "not reported"),
                        ],
                        default="NO",
                        max_length=2,
                        verbose_name="foliage density",
                    ),
                ),
                (
                    "aesthetic_value",
                    models.CharField(
                        choices=[
                            ("ES", "essential"),
                            ("EM", "emblematic"),
                            ("DE", "desirable"),
                            ("IN", "indifferent"),
                            ("UN", "unacceptable"),
                            ("NO", "not reported"),
                        ],
                        default="NO",
                        max_length=2,
                        verbose_name="aesthetic value",
                    ),
                ),
                (
                    "growth_phase",
                    models.CharField(
                        choices=[
                            ("F1", "F1"),
                            ("F2", "F2"),
                            ("F3", "F3"),
                            ("NO", "not reported"),
                        ],
                        default="NO",
                        max_length=2,
                        verbose_name="growth phase",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="notes")),
                (
                    "date",
                    models.DateField(
                        blank=True, null=True, verbose_name="observation date"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "recorded_by",
                    models.CharField(
                        blank=True,
                        default="Cortolima",
                        max_length=50,
                        verbose_name="recorded by",
                    ),
                ),
                (
                    "biodiversity_record",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="observations",
                        to="biodiversity.biodiversityrecord",
                        verbose_name="biodiversity record",
                    ),
                ),
            ],
            options={
                "verbose_name": "observation",
                "verbose_name_plural": "observations",
                "ordering": ["biodiversity_record", "created_at"],
            },
        ),
    ]
