# Generated by Django 5.1.7 on 2025-04-22 03:52

import django.contrib.gis.db.models.fields
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('places', '0002_create_initial_places'),
    ]

    operations = [
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(unique=True, verbose_name='station code')),
                ('name', models.CharField(max_length=100, verbose_name='station name')),
                ('location', django.contrib.gis.db.models.fields.PointField(geography=True, srid=4326, verbose_name='location')),
            ],
            options={
                'verbose_name': 'weather station',
                'verbose_name_plural': 'weather stations',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Climate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='UUID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('date', models.DateField(verbose_name='measurement date')),
                ('sensor', models.CharField(choices=[('t2m', 'air temperature at 2 m')], default='t2m', max_length=3, verbose_name='sensor description')),
                ('value', models.FloatField(verbose_name='measured value')),
                ('measure_unit', models.CharField(choices=[('°C', 'Celsius')], default='°C', max_length=2, verbose_name='measurement unit')),
                ('municipality', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='climate_data', to='places.municipality', verbose_name='municipality')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='climate_data', to='climate.station', verbose_name='weather station')),
            ],
            options={
                'verbose_name': 'climate data',
                'verbose_name_plural': 'climate data',
                'ordering': ['station', 'date'],
            },
        ),
    ]
